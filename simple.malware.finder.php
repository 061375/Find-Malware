<?php
/***
 *  Simple Malware Test Script
 *  By Jeremy Heminger : j.heminger@061375.com
 *
 *  This simple script has successfully helped me find infections that occasionally do find their way into websites
 *
 *  Other CMD code snippets that can be helpful are:
 *  -   Estimated disk usage by current working directory

        du -sh
    
    -   Determine when a file was added or changed
    
        stat /path/to/file
        
    -   Sort sub-directories/files from current location by file size
        
        du -s ./* | sort -n
        
    -   Determine files/folder that were changed after date:
        
        -   Sub-directories for the last 30 days
        
            find ./ -type d -mtime -30
        
        -   Files in sub-directories for the last 30 days
        
            find ./ -type f -mtime -30
    
    If files have changed or if you see a dramatic chnage in the size of a directory, then you may have an infection.
    These also help find what files may be infected
    
    
    12/23/2016 -
      - added common backdoor detection
        c999shell
        Fallag Gassrini Priv8 vhosts Config Grabber
        
 * */
function malwarechk($a,$b = false)
{
    $testing = false;
    if(false !== $b)$testing = true;
    
    
    $locations = array(
        '/var/www/html'
    );
    
    // you can overwrite the default test location in a comma delimitted list
    // example: /var/www/html,var/www/vhosts/,etc...
    if(false !== $a)$locations = array($a);
    
    // file extensions we are interested in testing
    $extensions = array(
        '*png',
        '*gif',
        '*jpg',
        '*pdf',
        '*mp3',
        '*mp4'
    );
    
    // inevitably there will be exceptions where legitimate developers follow patterns I am searching for.
    // add them here 
    $exceptions = array(
        'getid3.lib.php',
        'getid3.php',
        'TplLib.php',
        'wpallimport/plugin.php',
        'node_modules/less/gradlew.bat',
        'piwik/libs/pChart/class/pData.class.php'
    );
    
    //
    chdir( dirname ( __FILE__ ) );
    $me = getcwd();

    $found = false;
    // loop all specified test locations
    foreach($locations as $location) {
        
        if(true === $testing)print "\n checking location ".$location."\n";
        
        // pattern check V1
        $p = 'grep -Rl -s -E \'eval\\/\*|@\$GLOBALS|@eval|PHP_SESSION_PHP|Windows-1251|PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcH|https://packetstormsecurity.com/UNIX/penetration|http://ftp.powernet.com.tr/supermail/debug/k3|ls_setcheckboxall|http://fb.com/gassrini.gov.tn|Fallag Gassrini|Tunisian Fallaga Team|c999shell\' --exclude-dir={gitrepo,.svn,.git,.sass-cache,node_modules} '.$location;
        
        if(true === $testing)print "\n".$p."\n";
        
        $test = shell_exec($p);
        
        // discard exceptions
        $test_l = explode("\n",$test);
        $fexp = array();
        $r = array();
        foreach($exceptions as $e) {
            foreach($test_l as $t) {
                if(strpos($t,$e) !== false) {
                    if(true === $testing)print "\ndiscarding exception ".$t."\n";
                    if(!in_array($t,$fexp)) {
                        array_push($fexp,$t);
                    }
                }
            }
        }
        // rebuild the array sans exceptions
        foreach($test_l as $t) {
            if(!in_array($t,$fexp)) {
                array_push($r,$t);
            }
        }
        
        $r = implode("\n",$r);
        
        if(true === $testing)print "\n".$r."\n";
        
        if (strlen($r) > 0) {
            if (strpos($r,$location) !== false AND $r != $me) {
                if(false === $found) {
                    $found = $r;
                }else{
                    $found .= $r."\n";
                }
            }
        }
        // build a find for files with extensions and then grep them for <?php
        $exst = '';
        foreach($extensions as $extension) {
            $exst .= '-name "'.$extension.'" -o ';
        }
        $exst = substr($exst,0,strlen($exst)-3);
        $sh = 'find '.$location.' -type f \( '.$exst.'\) -exec grep -l "<?php" {} \;';
        if(true === $testing)print "\n".$sh."\n";
        $r = shell_exec($sh);
        if(true === $testing)print "\n".$r."\n";
        if (strlen($r) > 0) {
            if (strpos($r,$location) !== false) {
                if(false === $found) {
                    $found = $r;
                }else{
                    $found .= $r."\n";
                }
            }
        }
    }
    
    if(true === $testing)print "\n";
    
    if(false !== $found) {
        if(false === $testing) {
            
            
            /* **
             *
             *
             *
             * SEND EMAIL BY WHATEVER METHOD YOU CHOOSE HERE
             *
             *
             *
             * */
            
            
        }
        
        if(true === $testing)print "\n\npossible malware found - email sent\n\n".$found."\n\n";
        
        // log what was found
        $log = $me.'/../logs/found.log';
        
        $found = date('Y-m-d',strtotime('now')).":\n".$found."\n____________________________________\n";
        
        if (false === file_put_contents($log,$found,FILE_APPEND))
            print "\ncannot write to file\n";
    }else{
        if(false === $found)
            $found = "\n".date('Y-m-d',strtotime('now'))." : No malware detected";
        // no malware ... log success (warm and fuzzy log)
        $log = $me.'/../logs/clean.log';
        if (!file_exists($log)) {
            $file = "";
        }else{
            $file = file_get_contents($log);
        }
        if (strlen($file) > 10000) {
            unlink($log);
            if (false === file_put_contents($log.date('Y-m-d',strtotime('now')),$file))
                print "\ncannot write to file\n";
        }
        if (false === file_put_contents($log,$found,FILE_APPEND))
            print "\ncannot write to file\n";
    }
    
}
?>
